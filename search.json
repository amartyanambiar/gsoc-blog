[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Amartya’s GSoC Journal",
    "section": "",
    "text": "Pathways Visualisation\n\n\n\n\n\n\n\nR\n\n\nVisualisation\n\n\n\n\nAn expertly curated R notebook related to Pathway maps generations that I actively contributed to.\n\n\n\n\n\n\nJun 29, 2023\n\n\n\n\n\n\n  \n\n\n\n\nMGnify Visualisation Recon\n\n\n\n\n\n\n\nVisualisation\n\n\n\n\nCondensed list of visualisations used in MGnify\n\n\n\n\n\n\nJun 12, 2023\n\n\nAmartya Nambiar\n\n\n\n\n\n\n  \n\n\n\n\nThe Project\n\n\n\n\n\n\n\nAbout\n\n\n\n\nThrilled to announce that I have been accepted as a GSoC Contributor for the year of 2023 at EBI (European Bioinformatics Institute). I am delighted to share the details of my project.\n\n\n\n\n\n\nMay 29, 2023\n\n\nAmartya Nambiar\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Pathway_Viz/PathwaysExplorer.html#contents",
    "href": "posts/Pathway_Viz/PathwaysExplorer.html#contents",
    "title": "Pathways Visualization",
    "section": "Contents",
    "text": "Contents\n\nDrawing presence/absence KOs for one metagenomic sample\n\n1.1. Fetching data from MGnify\n1.2. Selecting the most complete pathways\n1.3. Ready to draw!\n\nResources and Documentation\n\n\n# Loading libraries:\nsuppressMessages({\n    library(ALDEx2)\n    library(data.table)\n    library(dplyr)\n    library(IRdisplay)\n    library(KEGGREST)\n    library(MGnifyR)   \n    library(pathview)\n    library(tidyjson)\n    library(IRdisplay)\n})\nsource(\"lib/variable_utils.r\")\nsource(\"lib/kegg_pathways_utils.r\")\n\ndisplay_markdown(file = '../_resources/mgnifyr_help.md')\n\nWarning message:\n“package ‘MASS’ was built under R version 4.2.3”\n\n\nWarning message:\n“package ‘truncnorm’ was built under R version 4.2.3”\n\n\nWarning message:\n“package ‘dplyr’ was built under R version 4.2.3”\n\n\nHelp with MGnifyR\nMGnifyR is an R package that provides a convenient way for R users to access data from the MGnify API.\nDetailed help for each function is available in R using the standard ?function_name command (i.e. typing ?mgnify_query will bring up built-in help for the mgnify_query command).\nA vignette is available containing a reasonably verbose overview of the main functionality. This can be read either within R with the vignette(\"MGnifyR\") command, or in the development repository\n\nMGnifyR Command cheat sheet\nThe following list of key functions should give a starting point for finding relevent documentation.\n\nmgnify_client() : Create the client object required for all other functions.\nmgnify_query() : Search the whole MGnify database.\nmgnify_analyses_from_xxx() : Convert xxx accessions to analyses accessions. xxx is either samples or studies.\nmgnify_get_analyses_metadata() : Retrieve all study, sample and analysis metadata for given analyses.\nmgnify_get_analyses_phyloseq() : Convert abundance, taxonomic, and sample metadata into a single phyloseq object.\nmgnify_get_analyses_results() : Get functional annotation results for a set of analyses.\nmgnify_download() : Download raw results files from MGnify.\nmgnify_retrieve_json() : Low level API access helper function.\n\n\n\n\n\n# Create your session mgnify_client object\nmg = mgnify_client(usecache = T, cache_dir = '/home/jovyan/.mgnify_cache')\n\n\n# Setting tables and figures size to display (these will be reset later):\noptions(repr.matrix.max.cols=150, repr.matrix.max.rows=500)\noptions(repr.plot.width=4, repr.plot.height=4)"
  },
  {
    "objectID": "posts/Pathway_Viz/PathwaysExplorer.html#mgnifyr-command-cheat-sheet",
    "href": "posts/Pathway_Viz/PathwaysExplorer.html#mgnifyr-command-cheat-sheet",
    "title": "Pathways Visualization",
    "section": "MGnifyR Command cheat sheet",
    "text": "MGnifyR Command cheat sheet\nThe following list of key functions should give a starting point for finding relevent documentation.\n\nmgnify_client() : Create the client object required for all other functions.\nmgnify_query() : Search the whole MGnify database.\nmgnify_analyses_from_xxx() : Convert xxx accessions to analyses accessions. xxx is either samples or studies.\nmgnify_get_analyses_metadata() : Retrieve all study, sample and analysis metadata for given analyses.\nmgnify_get_analyses_phyloseq() : Convert abundance, taxonomic, and sample metadata into a single phyloseq object.\nmgnify_get_analyses_results() : Get functional annotation results for a set of analyses.\nmgnify_download() : Download raw results files from MGnify.\nmgnify_retrieve_json() : Low level API access helper function."
  },
  {
    "objectID": "posts/Pathway_Viz/PathwaysExplorer.html#drawing-presenceabsence-kos-for-one-metagenomic-sample",
    "href": "posts/Pathway_Viz/PathwaysExplorer.html#drawing-presenceabsence-kos-for-one-metagenomic-sample",
    "title": "Pathways Visualization",
    "section": "Drawing presence/absence KOs for one metagenomic sample ",
    "text": "Drawing presence/absence KOs for one metagenomic sample \n\n1.1. Fetching data from MGnify & Pathways Selection \n\nPATHWAY_STUDY_IDS &lt;- get_variable_from_link_or_input('PATHWAY_STUDY_IDS', name =  'Study Accession', default = 'MGYS00006180,MGYS00006178')\nPATHWAY_STUDY_IDS &lt;- c(strsplit(PATHWAY_STUDY_IDS, \",\")[[1]])\nprint(paste(\"Using\", PATHWAY_STUDY_IDS, \"as Study Accession\"))\n\nUsing Study Accession = MGYS00006180,MGYS00006178 from the link you followed.\n\n\n[1] \"Using MGYS00006180 as Study Accession\"\n[2] \"Using MGYS00006178 as Study Accession\"\n\n\n\n# Custom Pathways Selection\n\n# Most general pathways include\n# Glycolysis / Gluconeogenesis, Citrate cycle (TCA cycle), Pentose phosphate pathway, \n# Fatty acid biosynthesis, Pyrimidine metabolism, Oxidative phosphorylation\n\nCUSTOM_PATHWAY_IDS &lt;- PathwaysSelection()\n\nPathways Selection :\n - For the most general & most complete pathways, input 'G'\n - Press Enter to generate the most complete pathways\n - To add custom pathways, input pathway numbers (ex: 00053,01220)\n\n\n\nUsing Pathways Accession = G from the link you followed.\n\n\n\nUsing 00010  -  Glycolysis / Gluconeogenesis  :  https://www.kegg.jp/pathway/map00010 as a Custom Pathway\nUsing 00020  -  Citrate cycle (TCA cycle)  :  https://www.kegg.jp/pathway/map00020 as a Custom Pathway\nUsing 00030  -  Pentose phosphate pathway  :  https://www.kegg.jp/pathway/map00030 as a Custom Pathway\nUsing 00061  -  Fatty acid biosynthesis  :  https://www.kegg.jp/pathway/map00061 as a Custom Pathway\nUsing 01232  -  Nucleotide metabolism  :  https://www.kegg.jp/pathway/map01232 as a Custom Pathway\nUsing 00240  -  Pyrimidine metabolism  :  https://www.kegg.jp/pathway/map00240 as a Custom Pathway\nUsing 00190  -  Oxidative phosphorylation  :  https://www.kegg.jp/pathway/map00190 as a Custom Pathway\n\n\n\n\nFetching the analysis accession list using the study accessions.\n\n\noutput &lt;- capture.output({\n  all_accessions &lt;- mgnify_analyses_from_studies(mg, PATHWAY_STUDY_IDS)\n  all_metadata &lt;- mgnify_get_analyses_metadata(mg, all_accessions)\n})\n\n\nKeeping just the first analysis accession to fetch the kegg orthologs count table from the MGnify API and transform from JSON to matrix.\n\n\naccession = head(all_accessions, 1)\nko_loc = paste0('analyses/',accession,'/kegg-orthologs')\n\n\nko_json = mgnify_retrieve_json(mg, path = ko_loc)\nko_data = as.data.frame(ko_json %&gt;% spread_all)[ , c(\"attributes.accession\", \"attributes.count\")]\nko_data = data.frame(ko_data, row.names=1)\ncolnames(ko_data)[1] = 'counts'\nko_matrix = data.matrix(ko_data)\nhead(ko_matrix, 3)\n\n\nA matrix: 3 × 1 of type dbl\n\n\n\ncounts\n\n\n\n\nK10822\n115\n\n\nK02030\n91\n\n\nK02004\n79\n\n\n\n\n\n\nFetch the modules completeness table and filter out completeness &lt; 100%.\n\n\ncomp_loc = paste0('analyses/',accession,'/kegg-modules')\nko_comp_json = mgnify_retrieve_json(mg, path = comp_loc)\nko_comp = as.data.frame(ko_comp_json %&gt;% spread_all)\nmodules = ko_comp[ko_comp$attributes.completeness == 100,][, c(\"attributes.accession\")]\nhead(modules)\n\nNo encoding supplied: defaulting to UTF-8.\n\n\n\n\n'M00001''M00002''M00003''M00004''M00005''M00006'\n\n\n\n\n\n1.2. Selecting the most complete pathways \n\n# Setting up function that collects KEGG pathways for a given list of IDs, excluding chemical structure & global maps\ncollect_pathways &lt;- function(ids_list) {\n    pathways = list()\n    for (id in ids_list) { \n        current_pathway = as.list(keggLink(\"pathway\", id))\n        for (index in grep(\"map\", current_pathway)) {        \n            clean_id = gsub(\"*path:\", \"\", current_pathway[index])\n            # Discarding chemical structure (map010XX), global (map011XX), and overview (map012XX) maps\n            prefix = substring(clean_id, 1, 6)\n            if(is.na(match(\"map010\", prefix)) & is.na(match(\"map011\", prefix)) & is.na(match(\"map012\", prefix)) ){\n                pathways = append(pathways, clean_id)\n            }\n        }\n    }\n    return(pathways)\n}\n\n\nNow we need to collect the list of template pathways where these complete modules can be draw. This step takes less than 1 minute to run.\n\n\nmd_pathways = collect_pathways(modules)\nhead(md_pathways)\n\n\n    'map00010'\n    'map00010'\n    'map00010'\n    'map00020'\n    'map00030'\n    'map00030'\n\n\n\n\nIn order to draw the most complete pathways maps, we will use the list of templates we obtained in the previous step and select only pathways having all their constituent modules.\n\n\n# Counting the number of modules we have in each pathway\nour_pathways_counts = list()\nfor (path_element in md_pathways) {\n    if (path_element %in% names(our_pathways_counts)) {\n        new_value = our_pathways_counts[[path_element]] + 1\n        our_pathways_counts[path_element] = new_value       \n    } else {\n        our_pathways_counts[path_element] = 1 \n    }\n}\n\n# Counting the number of modules expected in each pathway\nu_pathways = unique(md_pathways)\nexp_pathways_counts = list()\nfor (path in u_pathways) {\n    mod_count = length(as.list(keggLink(\"module\", path)))\n    exp_pathways_counts[path] = mod_count \n}\n\n# Selecting the pathways having all their constituent modules. We remove the 'map' prefix as pathview doesn't like it\nto_draw = list()\nfor (pathway in names(our_pathways_counts)) {\n    our_value = our_pathways_counts[[pathway]]\n    exp_value = exp_pathways_counts[[pathway]]\n    ratio =  our_value / exp_value\n    if (ratio == 1) {\n        nude_id =  gsub(\"map\", \"\", pathway)\n        to_draw = append(to_draw, nude_id)   \n    }\n}\n\n\n# Adding the custom pathways to to_draw if not present already\nfor (pathway in CUSTOM_PATHWAY_IDS){\n    if (!(pathway %in% to_draw)) {\n    to_draw = append(to_draw, pathway)\n        }\n    }\n\n\n# printing name of the pathways to be drawn\nfor (pathway in to_draw){\n    print(paste(pathway, \"--&gt;\", get_pathway_info(pathway)[1],\" : \",get_pathway_info(pathway)[2], sep=\" \"))\n}\n\n[1] \"00010 --&gt; Glycolysis / Gluconeogenesis  :  https://www.kegg.jp/pathway/map00010\"\n[1] \"00480 --&gt; Glutathione metabolism  :  https://www.kegg.jp/pathway/map00480\"\n[1] \"00430 --&gt; Taurine and hypotaurine metabolism  :  https://www.kegg.jp/pathway/map00430\"\n[1] \"00521 --&gt; Streptomycin biosynthesis  :  https://www.kegg.jp/pathway/map00521\"\n[1] \"00020 --&gt; Citrate cycle (TCA cycle)  :  https://www.kegg.jp/pathway/map00020\"\n[1] \"00030 --&gt; Pentose phosphate pathway  :  https://www.kegg.jp/pathway/map00030\"\n[1] \"00061 --&gt; Fatty acid biosynthesis  :  https://www.kegg.jp/pathway/map00061\"\n[1] \"01232 --&gt; Nucleotide metabolism  :  https://www.kegg.jp/pathway/map01232\"\n[1] \"00240 --&gt; Pyrimidine metabolism  :  https://www.kegg.jp/pathway/map00240\"\n[1] \"00190 --&gt; Oxidative phosphorylation  :  https://www.kegg.jp/pathway/map00190\"\n\n\n\n\n\n1.3. Ready to draw! \n\nAs we are plotting absence/presence, we set the number of bins = 2, the scale in one direction, and use 1 as limit.\n\nTakes a couple of minutes depending on the number of pathways\n\nsuppressMessages({\nfor (p in to_draw) {\n    pathview(gene.data = ko_matrix, \n             species = \"ko\", \n             pathway.id = p, \n             bins=c(2, 2), \n             both.dirs = FALSE, \n             limit = c(1,1), \n             mid = c(\"#ffffff\" , \"#ffffff\"), \n             high = c(\"#02b3ad\" , \"#02b3ad\")\n    )\n}\n})\n\n\nClearing the current working directory and Displaying all the generated figures that are stored at the pathway_plots/ directory.\n\n\ngeneratePathwayPlots()\n\n[1] \"Glycolysis / Gluconeogenesis\"\n\n\n\n\n\n[1] \"Citrate cycle (TCA cycle)\"\n\n\n\n\n\n[1] \"Pentose phosphate pathway\"\n\n\n\n\n\n[1] \"Fatty acid biosynthesis\"\n\n\n\n\n\n[1] \"Oxidative phosphorylation\"\n\n\n\n\n\n[1] \"Pyrimidine metabolism\"\n\n\n\n\n\n[1] \"Taurine and hypotaurine metabolism\"\n\n\n\n\n\n[1] \"Glutathione metabolism\"\n\n\n\n\n\n[1] \"Streptomycin biosynthesis\"\n\n\n\n\n\n[1] \"Nucleotide metabolism\""
  },
  {
    "objectID": "posts/Pathway_Viz/PathwaysExplorer.html#resources-and-documentation",
    "href": "posts/Pathway_Viz/PathwaysExplorer.html#resources-and-documentation",
    "title": "Pathways Visualization",
    "section": "Resources and Documentation",
    "text": "Resources and Documentation\n\nPathview Documentation:\n\nThe official documentation for Pathview, a tool for pathway-based data integration and visualization. It provides an overview of the tool and explains how to use it effectively.\nYou can find more information at https://pathview.uncc.edu/overview#kegg_view .\n\n\n\nKEGGREST\n\nKEGGREST is a Bioconductor package that provides programmatic access to the KEGG database.\nMore about KEGGREST at http://www.bioconductor.org/packages/release/bioc/vignettes/KEGGREST/inst/doc/KEGGREST-vignette.html"
  },
  {
    "objectID": "posts/Viz_Recon/index.html#map-of-sample-locations",
    "href": "posts/Viz_Recon/index.html#map-of-sample-locations",
    "title": "MGnify Visualisation Recon",
    "section": "Map of sample locations",
    "text": "Map of sample locations\nExample URL: https://www.ebi.ac.uk/metagenomics/studies/MGYS00001606#overview\nWhat it shows: Location of the samples collected\nDataset: Sample metadata (from ENA)\nVisualisation type: Geographical Map\nTechnology used: Google Maps embed"
  },
  {
    "objectID": "posts/Viz_Recon/index.html#quality-control",
    "href": "posts/Viz_Recon/index.html#quality-control",
    "title": "MGnify Visualisation Recon",
    "section": "Quality Control",
    "text": "Quality Control\nExample URL: https://www.ebi.ac.uk/metagenomics/analyses/MGYA00584637#qc\nTechnology used: Highcharts\nDataset: Accessed through Analyses Accession ID - Summary\n\nNumber of Sequence Reads per QC step\nWhat it shows: Number of reads which pass the quality control steps in the pipeline.\nVisualisation type: Normal X-axis Charts\n\n\nRead Length & Read GC Distribution\nWhat it shows: Histograms showing distributions of sequence lengths and percentage GC content for the sequences having passed quality control.\nVisualisation type: Histogram\n\n\nNucleotide Position Histogram\nWhat it shows: Shows the relative abundance of nucleotides (A, C, G, T, or ambiguous base \"N\") at each position starting from the beginning of each read up to the first 500 base pairs.\nVisualisation type: Histogram\nDataset: Accessed through Analyses Accession ID - nucleotide-distribution"
  },
  {
    "objectID": "posts/Viz_Recon/index.html#taxonomic-analysis",
    "href": "posts/Viz_Recon/index.html#taxonomic-analysis",
    "title": "MGnify Visualisation Recon",
    "section": "Taxonomic analysis",
    "text": "Taxonomic analysis\nResults from the taxonomic analysis steps of the pipeline.\nExample URL: https://www.ebi.ac.uk/metagenomics/analyses/MGYA00584637#taxonomic\n\nKrona\nWhat it shows: Interactive Krona to visualise the taxa hierarchy\nTechnology used: https://github.com/marbl/Krona/wiki\nVisualisation type: Krona\nDataset: Accessed through Analyses Accession ID - krona${taxResults}\n\n\nDomain Composition\nTechnology used: Highcharts\nVisualisation type: Pie, Column\nDataset: Accessed through Analysis Accession ID - taxonomy\n\n\nPhylum Composition\nTechnology used: Highcharts\nVisualisation type: Pie, Column, Stacked Column\nDataset: Accessed through Analysis Accession ID - taxonomy"
  },
  {
    "objectID": "posts/Viz_Recon/index.html#functional-analysis",
    "href": "posts/Viz_Recon/index.html#functional-analysis",
    "title": "MGnify Visualisation Recon",
    "section": "Functional analysis",
    "text": "Functional analysis\nCharts present the functional analysis outputs of the pipeline, which focus on InterPro, Pfam, KEGG orthologue and GO term annotations. These summarise the functional content of the sequences in the sample.\nExample URL: https://www.ebi.ac.uk/metagenomics/analyses/MGYA00584637#functional\n\nInterPro\nWhat it shows: Shows Sequence feature summary & InterPro Summary\nTechnology used: Highcharts\nVisualisation type: X-axis Chart, Pie\n\n\nGO Terms\nWhat it shows: A summary of Gene Ontology (GO) terms derived from InterPro matches to the sample is provided in the charts below.\nTechnology used: Highcharts\nVisualisation type: Bar, Pie\n\n\nPfam\nWhat it shows: Top 10 Pfam entries\nTechnology used: Highcharts\nVisualisation type: Bar\n\n\nKO\nWhat it shows: Top 10 KO entries\nTechnology used: Highcharts\nVisualisation type: Bar"
  },
  {
    "objectID": "posts/Viz_Recon/index.html#contig-viewer",
    "href": "posts/Viz_Recon/index.html#contig-viewer",
    "title": "MGnify Visualisation Recon",
    "section": "Contig Viewer",
    "text": "Contig Viewer\nExample URL: https://www.ebi.ac.uk/metagenomics/analyses/MGYA00643204?selected_contig=ERZ12633542.2-NODE-96-length-2072-cov-5.941001#contigs-viewer\nWhat it shows: Contig browser for the assembly contigs\nDataset: through assembly ID, FASTA URL\nVisualisation type: Contig viewer\nTechnology used: IGV"
  },
  {
    "objectID": "posts/Viz_Recon/index.html#pathwayssystems",
    "href": "posts/Viz_Recon/index.html#pathwayssystems",
    "title": "MGnify Visualisation Recon",
    "section": "Pathways/Systems",
    "text": "Pathways/Systems\nResults from the biochemical pathways and systems predictions steps of the pipeline.\n\nKEGG Module\n\n\nGenome properties\n\n\nantiSMASH"
  },
  {
    "objectID": "posts/Viz_Recon/index.html#kegg-pathway-visualisation",
    "href": "posts/Viz_Recon/index.html#kegg-pathway-visualisation",
    "title": "MGnify Visualisation Recon",
    "section": "Kegg pathway visualisation",
    "text": "Kegg pathway visualisation\nExample URL: https://github.com/EBI-Metagenomics/notebooks/blob/pathways_vis/src/notebooks/R%20Examples/pathways_vis.ipynb (not yet live)\nWhat it shows: completeness of KEGG pathways for a sample\nDataset: combination of an MGYA Kegg Module list and a Pathway from KEGG API\nVisualisation type: pathway network\nTechnology used: pathviz R package"
  },
  {
    "objectID": "The Project/me.html",
    "href": "The Project/me.html",
    "title": "Me",
    "section": "",
    "text": "Amartya Nambiar\n\nGSoC - 2023 Contributor\n\n\n\n\nSocial Links : https://amartya.vercel.app/"
  },
  {
    "objectID": "The Project/mentors.html",
    "href": "The Project/mentors.html",
    "title": "The Mentors",
    "section": "",
    "text": "EMBL-EBI is international, innovative and interdisciplinary, and a champion of open data in the life sciences.\nThey are part of the European Molecular Biology Laboratory (EMBL), an intergovernmental research organisation funded by over 20 member states, prospect and associate member states.\n\n\nMartin Beracochea\n\nMGnify Production Project Leader\n\n\n\n\nEBI Portfolio : https://www.ebi.ac.uk/people/person/martin-beracochea/\n\n\n\n\n\n\n\n\n\n\n\n\nSandy Rogers\n\nMGnify Website Full Stack Developer\n\n\n\n\nEBI Portfolio : https://www.ebi.ac.uk/people/person/martin-beracochea/"
  },
  {
    "objectID": "The Project/project.html",
    "href": "The Project/project.html",
    "title": "The Project",
    "section": "",
    "text": "Interactive Visualization for Comparative Metagenomics in MGnify\nThe project aims to improve the visualisation tools for metagenomics data in the MGnify platform by identifying and using new technologies that can be used both on the website and in Jupyter notebooks. The goal is to enable researchers to easily compare taxonomic information from multiple studies for better interpretation and analysis of metagenomics data. Additionally, the project aims to streamline the process of user community contribution to MGnify Notebooks for improved accessibility and user experience. The project will be approached in three phases: research and evaluation of visualisation technologies, development of a Jupyter/observable notebook for comparing and visualising data from two studies, and integration of a JupyterLab extension to streamline the contribution process. The deliverables include a report on suitable visualisation technologies, a fully-functional Jupyter/Observable Notebook, and an integrated extension for user contributions. As a stretch goal, a component for the MGnify website that allows users to select multiple studies and launch a notebook for cross-study analyses will be developed."
  },
  {
    "objectID": "Sidebar/commands.html",
    "href": "Sidebar/commands.html",
    "title": "Saviour Commands",
    "section": "",
    "text": "Get The Jupyter Lab Server Up and Running\n\n\n\n\n\n\nFor  pathways_vis  Branch\n\n\n\ndocker run -it -v $PWD/src/notebooks:/home/jovyan/mgnify-examples -p 8888:8888 \\\nquay.io/microbiome-informatics/emg-notebooks.dev:pathways_vis\n\n\n\n\n\nStatic Documentation Rendering\n\n\n\n\n\n\nBuild the Docker Image for Quarto Rendering\n\n\n\ndocker build -f docker/docs.Dockerfile -t notebooks-static .\n\n\n\n\n\n\n\n\nRender the Docs & Notebooks\n\n\n\ndocker run -it -v $PWD:/opt/repo -w /opt/repo notebooks-static render --execute\n\n\n\n\n\n\n\n\nStart the server for serving the Quarto rendered files\n\n\n\ndocker run -it -v $PWD:/opt/repo -w /opt/repo/_site -p 4444:4444 --entrypoint python notebooks-static \\\n -m http.server 4444"
  },
  {
    "objectID": "Sidebar/keywords.html",
    "href": "Sidebar/keywords.html",
    "title": "Keywords",
    "section": "",
    "text": "Amplicon\n\nDNA or RNA molecule that is amplified or copied through a laboratory technique called polymerase chain reaction (PCR) or ligase chain reaction (LCR).\nOutput of Amplification process.\nAmplification -&gt; Larger number of copies of a specific DNA sequence.\n\n\n\nBiome\n\nBiogeographical unit consisting of a biological community.\nOcean, Soil, etc.\n\n\n\nDNA\n\nDeoxyriboNucleic Acid.\nDouble-stranded molecule that contains the genetic code.\n\n\n\nENA\n\nEuropean Nucleotide Archive\nA global database of DNA and RNA sequences.\nData from ENA is used in MGnify.\n\n\n\nGenome\n\nComplete genetic material of an organism.\nMade up of DNA.\nExample : Human Genome consists of 3 billion nucleotides (23 pairs of chromosomes)\n\n\n\nMetagenome\n\nMetagenome is the genetic material recovered directly from environmental or clinical samples by a method called sequencing.\nMetagenomics is the study of the structure and function of these nucleotide sequences.\n\n\n\nMetagenome Assembled Genome (MAG)\n\nA metagenome assembled genome is a genome reconstructed from metagenomic data.\n1 partial or complete genome\n1 MAG = 1 species\n\n\n\nMGnify\n\nThe MGnify platform facilitates the assembly, analysis and archiving of microbiome-derived nucleicacid sequences.\nHub for the analysis and exploration of metagenomic, metatranscriptomic, amplicon and assembly data.\nEMBL’s European Bioinformatics Institute 🙌"
  }
]