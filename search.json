[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Amartya’s GSoC Journal",
    "section": "",
    "text": "GSoC - 2023 : Wrapped\n\n\n\n\n\n\n\nEvals\n\n\nReport\n\n\n\n\nFinal Report - Comprehensive Summary of my Contributions\n\n\n\n\n\n\nAug 25, 2023\n\n\nAmartya Nambiar\n\n\n\n\n\n\n  \n\n\n\n\nPathways Visualization\n\n\n\n\n\n\n\nR\n\n\nVisualization\n\n\n\n\nAn expertly curated notebook to generate pathway visualizations from MGnify data, to which I actively contributed.\n\n\n\n\n\n\nJun 29, 2023\n\n\nAlejandra Escobar (MGnify team) and Amartya Nambiar\n\n\n\n\n\n\n  \n\n\n\n\nMGnify Visualization Recon\n\n\n\n\n\n\n\nVisualization\n\n\n\n\nCondensed list of Visualizations used in MGnify\n\n\n\n\n\n\nJun 12, 2023\n\n\nAmartya Nambiar\n\n\n\n\n\n\n  \n\n\n\n\nThe Project\n\n\n\n\n\n\n\nAbout\n\n\n\n\nThrilled to announce that I have been accepted as a GSoC Contributor for the year of 2023 at EBI (European Bioinformatics Institute). I am delighted to share the details of my project.\n\n\n\n\n\n\nMay 29, 2023\n\n\nAmartya Nambiar\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Sidebar/keywords.html",
    "href": "Sidebar/keywords.html",
    "title": "Keywords",
    "section": "",
    "text": "Amplicon\n\nDNA or RNA molecule that is amplified or copied through a laboratory technique called polymerase chain reaction (PCR) or ligase chain reaction (LCR).\nOutput of Amplification process.\nAmplification -&gt; Larger number of copies of a specific DNA sequence.\n\n\n\nBiome\n\nBiogeographical unit consisting of a biological community.\nOcean, Soil, etc.\n\n\n\nDNA\n\nDeoxyriboNucleic Acid.\nDouble-stranded molecule that contains the genetic code.\n\n\n\nENA\n\nEuropean Nucleotide Archive\nA global database of DNA and RNA sequences.\nData from ENA is used in MGnify.\n\n\n\nGenome\n\nComplete genetic material of an organism.\nMade up of DNA.\nExample : Human Genome consists of 3 billion nucleotides (23 pairs of chromosomes)\n\n\n\nMetagenome\n\nMetagenome is the genetic material recovered directly from environmental or clinical samples by a method called sequencing.\nMetagenomics is the study of the structure and function of these nucleotide sequences.\n\n\n\nMetagenome Assembled Genome (MAG)\n\nA metagenome assembled genome is a genome reconstructed from metagenomic data.\n1 partial or complete genome\n1 MAG = 1 species\n\n\n\nMGnify\n\nThe MGnify platform facilitates the assembly, analysis and archiving of microbiome-derived nucleicacid sequences.\nHub for the analysis and exploration of metagenomic, metatranscriptomic, amplicon and assembly data.\nEMBL’s European Bioinformatics Institute 🙌"
  },
  {
    "objectID": "Sidebar/commands.html",
    "href": "Sidebar/commands.html",
    "title": "Saviour Commands",
    "section": "",
    "text": "Get The Jupyter Lab Server Up and Running\n\n\n\n\n\n\nFor  pathways_vis  Branch\n\n\n\ndocker run -it -v $PWD/src/notebooks:/home/jovyan/mgnify-examples -p 8888:8888 \\\nquay.io/microbiome-informatics/emg-notebooks.dev:pathways_vis\n\n\n\n\n\nStatic Documentation Rendering\n\n\n\n\n\n\nBuild the Docker Image for Quarto Rendering\n\n\n\ndocker build -f docker/docs.Dockerfile -t notebooks-static .\n\n\n\n\n\n\n\n\nRender the Docs & Notebooks\n\n\n\ndocker run -it -v $PWD:/opt/repo -w /opt/repo notebooks-static render --execute\n\n\n\n\n\n\n\n\nStart the server for serving the Quarto rendered files\n\n\n\ndocker run -it -v $PWD:/opt/repo -w /opt/repo/_site -p 4444:4444 --entrypoint python notebooks-static \\\n -m http.server 4444\n\n\n\n\n\nDeploy MGnify site with Test data\n\n\n\n\n\n\nAdd test data, Start the API server and Render site\n\n\n\ntask restore-mongo-test-db && task run-client"
  },
  {
    "objectID": "The Project/me.html",
    "href": "The Project/me.html",
    "title": "Me",
    "section": "",
    "text": "Amartya Nambiar\n\nGSoC - 2023 Contributor\n\n\n\n\nSocial Links : https://amartya.vercel.app/"
  },
  {
    "objectID": "The Project/mentors.html",
    "href": "The Project/mentors.html",
    "title": "The Mentors",
    "section": "",
    "text": "EMBL-EBI is international, innovative and interdisciplinary, and a champion of open data in the life sciences.\nThey are part of the European Molecular Biology Laboratory (EMBL), an intergovernmental research organisation funded by over 20 member states, prospect and associate member states.\n\n\nMartin Beracochea\n\nMGnify Production Project Leader\n\n\n\n\nEBI Portfolio : https://www.ebi.ac.uk/people/person/martin-beracochea/\n\n\n\n\n\n\n\n\n\n\n\n\nSandy Rogers\n\nMGnify Website Full Stack Developer\n\n\n\n\nEBI Portfolio : https://www.ebi.ac.uk/people/person/sandy-alexander-rogers/"
  },
  {
    "objectID": "The Project/project.html",
    "href": "The Project/project.html",
    "title": "The Project",
    "section": "",
    "text": "Interactive Visualization for Comparative Metagenomics in MGnify\nThe project aims to improve the visualisation tools for metagenomics data in the MGnify platform by identifying and using new technologies that can be used both on the website and in Jupyter notebooks. The goal is to enable researchers to easily compare taxonomic information from multiple studies for better interpretation and analysis of metagenomics data. Additionally, the project aims to streamline the process of user community contribution to MGnify Notebooks for improved accessibility and user experience. The project will be approached in three phases: research and evaluation of visualisation technologies, development of a Jupyter/observable notebook for comparing and visualising data from two studies, and integration of a JupyterLab extension to streamline the contribution process. The deliverables include a report on suitable visualisation technologies, a fully-functional Jupyter/Observable Notebook, and an integrated extension for user contributions. As a stretch goal, a component for the MGnify website that allows users to select multiple studies and launch a notebook for cross-study analyses will be developed."
  },
  {
    "objectID": "posts/Viz_Recon/index.html#map-of-sample-locations",
    "href": "posts/Viz_Recon/index.html#map-of-sample-locations",
    "title": "MGnify Visualization Recon",
    "section": "Map of sample locations",
    "text": "Map of sample locations\nExample URL: https://www.ebi.ac.uk/metagenomics/studies/MGYS00001606#overview\nWhat it shows: Location of the samples collected\nDataset: Sample metadata (from ENA)\nVisualization type: Geographical Map\nTechnology used: Google Maps embed"
  },
  {
    "objectID": "posts/Viz_Recon/index.html#quality-control",
    "href": "posts/Viz_Recon/index.html#quality-control",
    "title": "MGnify Visualization Recon",
    "section": "Quality Control",
    "text": "Quality Control\nExample URL: https://www.ebi.ac.uk/metagenomics/analyses/MGYA00584637#qc\nTechnology used: Highcharts\nDataset: Accessed through Analyses Accession ID - Summary\n\nNumber of Sequence Reads per QC step\nWhat it shows: Number of reads which pass the quality control steps in the pipeline.\nVisualization type: Normal X-axis Charts\n\n\nRead Length & Read GC Distribution\nWhat it shows: Histograms showing distributions of sequence lengths and percentage GC content for the sequences having passed quality control.\nVisualization type: Histogram\n\n\nNucleotide Position Histogram\nWhat it shows: Shows the relative abundance of nucleotides (A, C, G, T, or ambiguous base \"N\") at each position starting from the beginning of each read up to the first 500 base pairs.\nVisualization type: Histogram\nDataset: Accessed through Analyses Accession ID - nucleotide-distribution"
  },
  {
    "objectID": "posts/Viz_Recon/index.html#taxonomic-analysis",
    "href": "posts/Viz_Recon/index.html#taxonomic-analysis",
    "title": "MGnify Visualization Recon",
    "section": "Taxonomic analysis",
    "text": "Taxonomic analysis\nResults from the taxonomic analysis steps of the pipeline.\nExample URL: https://www.ebi.ac.uk/metagenomics/analyses/MGYA00584637#taxonomic\n\nKrona\nWhat it shows: Interactive Krona to visualise the taxa hierarchy\nTechnology used: https://github.com/marbl/Krona/wiki\nVisualization type: Krona\nDataset: Accessed through Analyses Accession ID - krona${taxResults}\n\n\nDomain Composition\nTechnology used: Highcharts\nVisualization type: Pie, Column\nDataset: Accessed through Analysis Accession ID - taxonomy\n\n\nPhylum Composition\nTechnology used: Highcharts\nVisualization type: Pie, Column, Stacked Column\nDataset: Accessed through Analysis Accession ID - taxonomy"
  },
  {
    "objectID": "posts/Viz_Recon/index.html#functional-analysis",
    "href": "posts/Viz_Recon/index.html#functional-analysis",
    "title": "MGnify Visualization Recon",
    "section": "Functional analysis",
    "text": "Functional analysis\nCharts present the functional analysis outputs of the pipeline, which focus on InterPro, Pfam, KEGG orthologue and GO term annotations. These summarise the functional content of the sequences in the sample.\nExample URL: https://www.ebi.ac.uk/metagenomics/analyses/MGYA00584637#functional\n\nInterPro\nWhat it shows: Shows Sequence feature summary & InterPro Summary\nTechnology used: Highcharts\nVisualization type: X-axis Chart, Pie\n\n\nGO Terms\nWhat it shows: A summary of Gene Ontology (GO) terms derived from InterPro matches to the sample is provided in the charts below.\nTechnology used: Highcharts\nVisualization type: Bar, Pie\n\n\nPfam\nWhat it shows: Top 10 Pfam entries\nTechnology used: Highcharts\nVisualization type: Bar\n\n\nKO\nWhat it shows: Top 10 KO entries\nTechnology used: Highcharts\nVisualization type: Bar"
  },
  {
    "objectID": "posts/Viz_Recon/index.html#contig-viewer",
    "href": "posts/Viz_Recon/index.html#contig-viewer",
    "title": "MGnify Visualization Recon",
    "section": "Contig Viewer",
    "text": "Contig Viewer\nExample URL: https://www.ebi.ac.uk/metagenomics/analyses/MGYA00643204?selected_contig=ERZ12633542.2-NODE-96-length-2072-cov-5.941001#contigs-viewer\nWhat it shows: Contig browser for the assembly contigs\nDataset: through assembly ID, FASTA URL\nVisualization type: Contig viewer\nTechnology used: IGV"
  },
  {
    "objectID": "posts/Viz_Recon/index.html#pathwayssystems",
    "href": "posts/Viz_Recon/index.html#pathwayssystems",
    "title": "MGnify Visualization Recon",
    "section": "Pathways/Systems",
    "text": "Pathways/Systems\nResults from the biochemical pathways and systems predictions steps of the pipeline.\nExample URL: https://www.ebi.ac.uk/metagenomics/analyses/MGYA00572069#path-systems\n\nKEGG Module\nWhat it shows: Modules vs Completeness\nDataset: analyses/${overviewData.id}/kegg-modules\nVisualization type: Bar Chart\nTechnology used: Highcharts\n\n\nGenome properties\nWhat it shows: Hierarchical structure of Genome Properties\nDataset: analyses/${overviewData.id}/genome-properties\nVisualization type: Hierarchy tree\nTechnology used: HierarchyNode\n\n\nantiSMASH\nWhat it shows: Displays top 10 antiSMASH gene clusters\nDataset: analyses/${overviewData.id}/antismash-gene-clusters\nVisualization type: Bar Chart\nTechnology used: Highcharts"
  },
  {
    "objectID": "posts/Final_Report/index.html",
    "href": "posts/Final_Report/index.html",
    "title": "GSoC - 2023 : Wrapped",
    "section": "",
    "text": "After the results for Google Summer of Code(GSoC) - 2023 were released, my mentors Martin Beracochea and Sandy Rogers remained in close contact with me during the community bonding period. Subsequently, the coding period unfolded, which I’ve structured into 3 phases to align with the 3 projects I undertook as part of my contributions.\nMy contribution at EMBL - EBI for GSoC majorly involved creating visualizations that would help in comparative metagenomics. Additionally, I used Vega-Lite which introduced an approach that would allow a common grammar for creating visualisations. This was done to enhance code reusability in both React and Jupyter Notebooks, regardless of programming language.\n\n\nPhase 1 30th May - 30th Jun\n\nDelved into relevant research papers, understood the intricacies of assembly runs, samples, studies and analyses, which form the foundational concepts of MGnify.\nDocumented all visualizations present on the MGnify website which was extensively used in Phase 2.\nSignificant chunk of Phase 1 was spent contributing and collaborating with Alejandra Escobar (MGnify Bioinformatician) on the enhancement of her Jupyter notebook - Drawing presence/absence KOs for one metagenomic sample, specifically focusing on Pathways Visualization.\nThe objective was to streamline the notebook, making it more concise, interactive, self-explanatory, and immediately usable. \nTech Dealt : R + Docker + JupyterLab + Quarto + Packages like KEGGREST, Pathview \nPull Request :\n\nWorked on an existing PR by Alejandra, Link : https://github.com/EBI-Metagenomics/notebooks/pull/26\nStatus : Under Review 🟡\n\nCode in Action :\n\nStatic Version of the Pathways Visualization Notebook I contributed to (hosted on this blog)\nDocumentation of all Visualizations present in MGnify\n\n\n\n\n: : : : : : : : : : : : : : : : : :\n\n\n\n\nPhase 2 1st Jul - 14th Aug\n\nThe second phase deals with exploring and building visualizations for the MGnify website.\n\n\nPhase 2A 1st Jul - 16th Jul\n\nThis phase focused on finding visualization solutions that could work seamlessly in both JavaScript and Python environments.\nInvolved testing of packages like Plotly and Highcharts were tested, with a preference for Highcharts due to its usage in the MGnify site.\nBut then Highchart posed an issue as it couldn’t reference data as a link, impacting interoperability between React and Jupyter, especially with large datasets.\nThen came the idea of a common visualization grammar, enabling easy porting of visualizations to Jupyter notebooks for users to perform deeper visualization and push in custom data as well.\nAlternatives like pandas-js, Danfo.js, and Vega-Lite were considered.\nIn the end, the Vega ecosystem was selected due to its compatibility and ability to handle large datasets, ensuring seamless interoperability.\n\n\n. . .\n\n\n\nPhase 2B 17th Jul - 14th Aug\n\nThis phase focused on developing visualizations using the Vega framework.\nAlso, I had the privilege of meeting the EBI team, where I discussed my GSoC experience, shared progress updates, and conducted a live Vega-Lite demo to showcase its capabilities. (Presentation)\nThe Visualisations that have been successfully generated using Vega are :\n\n\n\n\nName\nVisualisation Type\nComponent used (File)\n\n\n\n\nNumber of Sequence Reads per QC step\nHorizontal Bar Chart (uses tsx preprocessed data)\nQCChart.tsx\n\n\nReads Length Histogram\nArea Chart + Std Deviation band\nQC-chart-components/VConcatTop.tsx\n\n\nReads GC Distribution\nArea Chart + Std Deviation band\nQC-chart-components/VConcatTop.tsx\n\n\nReads Length (Min, Avg, Max)\nHorizontal Bar Chart\nQC-chart-components/VConcatBottom.tsx\n\n\nReads GC-AT Content (%)\nHorizontal Stacked Bar Chart\nQC-chart-components/VConcatBottom.tsx\n\n\nNucleotide Position Histogram\nStacked Area Chart\nNucleotidesHistogram.tsx\n\n\nInterpro Sequence feature summary\nHorizontal Bar Chart\nInterproBar.tsx\n\n\nGO Terms\nConcatenated Horizontal Bar Chart\nGOBar.tsx\n\n\nDomain + Phylum Composition\nMulti-Colour Bar Chart\nTaxBar.tsx\n\n\nPfam\nVertical Bar Chart\nVerticalBar.tsx\n\n\nKO\nVertical Bar Chart\nVerticalBar.tsx\n\n\nKEGG Module categories\nVertical Bar Chart\nVerticalBar.tsx\n\n\nantiSMASH gene clusters\nVertical Bar Chart\nVerticalBar.tsx\n\n\nCOG Analysis\nVertical Bar Chart\nVerticalBar.tsx\n\n\nKEGG Class Analysis\nVertical Bar Chart\nVerticalBar.tsx\n\n\nKEGG Module Analysis\nVertical Bar Chart\nVerticalBar.tsx\n\n\n\n\nOne of my favorite charts that I created was the Nucleotide position Histogram (live example below):\n\n\n\n\n  \n  Vega-Lite Chart\n  \n  \n  \n\n\n  \n  \n  \n\n\n\nTech Dealt :\n\nDocker + React + Typescript + Vega-Lite + Package : react-vega\n\n\n\n\nPull Requests :\n\nebi-metagenomics-client : Components were created for charts mentioned above\n\nLink : https://github.com/EBI-Metagenomics/ebi-metagenomics-client/pull/295\nStatus : Under Review 🟡\n\nemgapi : Made a minor change in data format\n\nLink : https://github.com/EBI-Metagenomics/emgapi/pull/321\nStatus : Under Review 🟡\n\n\n\n\n: : : : : : : : : : : : : : : : : :\n\n\n\n\nPhase 3 14th Aug\n\nUnder the guidance of Varsha Kale, I worked on a her idea centered around the Study Summary feature.\nThe major point to be taken note of is that I used Altair for this, a Python package for generating Vega-Lite visualizations.\nThis required a deep dive into the intricate ontological web format of gene ontologies.\nGenerated Bar Charts for GO-slim data and Tree Heatmap visualizations for the complete GO annotation data, using ontological web formats for gene ontologies, enabling in-depth analysis. \nTech Dealt : Python + JupyterLab + Packages like Altair, graphviz, Owlready2 \n\n\n\n\nUnexplored Horizons\n\nSchema for Vega-Lite Visualizations\n\nOne of the best ideas was to create a common repo that would host the schema for Vega-Lite visualizations.\nThis schema could be utilized by both the frontend (React) and Jupyter Notebooks, facilitating deeper data analysis.\nI believe this is the most important horizon to be explored with respect to Vega-Lite.\n\n\n\nVega-Lite Dashboard for Comparative Metagenomics\n\nA Vega-Lite dashboard within MGnify constituting multiple interactive charts and input controls.\nA dashboard of this kind would provide the users with an experience to delve deeply into Comparative Metagenomics, explore complex data with ease.\n\n\n\nPre-generated KRONA Charts\n\nIn addition to the above, the idea of pre-generating KRONA charts for Taxanomic Analysis under Study Analysis Summary.\nThese charts, once generated, could be integrated into Jupyter Notebooks, enabling a complete Analysis Summary of a Study, considering the work done with respect to GO analyses carried out in Phase 3."
  },
  {
    "objectID": "src/notebooks/PathwaysExplorer.html#contents",
    "href": "src/notebooks/PathwaysExplorer.html#contents",
    "title": "Pathways Visualization",
    "section": "Contents",
    "text": "Contents\n\nDrawing presence/absence KOs for one metagenomic sample\n\n1.1. Fetching data from MGnify\n1.2. Selecting the most complete pathways\n1.3. Ready to draw!\n\nResources and Documentation\n\n\n\n\n\n\n\nLibraries Used\n\n\n\n\nALDEx2 : Analyzing and comparing the abundance or occurrence of KEGG orthologs or modules within different samples or datasets.\ndata.table, dplyr : Used for data manipulation and transformation.\nKEGGREST : Allows accessing KEGG pathways.\nMGnifyR : It wraps the MGnify API in R functions.\npathview : Used for visualizing and analyzing pathway data with gene or protein expression data overlaid.\nvariable_utils.r : Contains fucntion to retrieve variables from the environment & user input.\nkegg_pathways_utils.r : Contains functions to fetch and process KEGG pathways.\n\n\n\n\n# Loading libraries:\nsuppressMessages({\n    library(ALDEx2)\n    library(data.table)\n    library(dplyr)\n    library(IRdisplay)\n    library(KEGGREST)\n    library(MGnifyR)   \n    library(pathview)\n    library(tidyjson)\n    library(IRdisplay)\n})\nsource(\"lib/variable_utils.r\")\nsource(\"lib/kegg_pathways_utils.r\")\n\n# display_markdown(file = '../_resources/mgnifyr_help.md')\n\n\n# Create your session mgnify_client object\nmg = mgnify_client(usecache = T, cache_dir = '/home/jovyan/.mgnify_cache')\n\n\n# Setting tables and figures size to display (these will be reset later):\noptions(repr.matrix.max.cols=150, repr.matrix.max.rows=500)\noptions(repr.plot.width=2, repr.plot.height=2)"
  },
  {
    "objectID": "src/notebooks/PathwaysExplorer.html#drawing-presenceabsence-kos-for-one-metagenomic-sample",
    "href": "src/notebooks/PathwaysExplorer.html#drawing-presenceabsence-kos-for-one-metagenomic-sample",
    "title": "Pathways Visualization",
    "section": "Drawing presence/absence KOs for one metagenomic sample ",
    "text": "Drawing presence/absence KOs for one metagenomic sample \n\n1.1. Fetching data from MGnify & Pathways Selection \n\nPATHWAY_STUDY_IDS &lt;- get_variable_from_link_or_input('PATHWAY_STUDY_IDS', name =  'Study Accession', default = 'MGYS00006180,MGYS00006178')\nPATHWAY_STUDY_IDS &lt;- c(strsplit(PATHWAY_STUDY_IDS, \",\")[[1]])\nprint(paste(\"Using\", PATHWAY_STUDY_IDS, \"as Study Accession\"))\n\nType a Study Accession [default: MGYS00006180,MGYS00006178] \n\n\n[1] \"Using MGYS00006180 as Study Accession\"\n[2] \"Using MGYS00006178 as Study Accession\"\n\n\n\n\nBoth the studies chosen by Alejandra Escobar are related to the gut bacteria of honeybees.\n\n\n\n# Custom Pathways Selection\n\n# Most general pathways include\n# Glycolysis / Gluconeogenesis, Citrate cycle (TCA cycle), Pentose phosphate pathway, \n# Fatty acid biosynthesis, Pyrimidine metabolism, Oxidative phosphorylation\n\nCUSTOM_PATHWAY_IDS &lt;- PathwaysSelection()\n\nPathways Selection :\n\nFor the most general & most complete pathways, input ‘G’\nPress Enter to generate the most complete pathways\nTo add custom pathways, input pathway numbers (ex: 00053,01220)\n\n\n\nType a Pathways Accession [default: ] G\n\n\n\nUsing 00010  -  Glycolysis / Gluconeogenesis  :  https://www.kegg.jp/pathway/map00010 as a Custom Pathway\nUsing 00020  -  Citrate cycle (TCA cycle)  :  https://www.kegg.jp/pathway/map00020 as a Custom Pathway\nUsing 00030  -  Pentose phosphate pathway  :  https://www.kegg.jp/pathway/map00030 as a Custom Pathway\nUsing 00061  -  Fatty acid biosynthesis  :  https://www.kegg.jp/pathway/map00061 as a Custom Pathway\nUsing 01232  -  Nucleotide metabolism  :  https://www.kegg.jp/pathway/map01232 as a Custom Pathway\nUsing 00240  -  Pyrimidine metabolism  :  https://www.kegg.jp/pathway/map00240 as a Custom Pathway\nUsing 00190  -  Oxidative phosphorylation  :  https://www.kegg.jp/pathway/map00190 as a Custom Pathway\n\n\n\n\nFetching the analysis accession list using the study accessions.\n\n\noutput &lt;- capture.output({\n  all_accessions &lt;- mgnify_analyses_from_studies(mg, PATHWAY_STUDY_IDS)\n  all_metadata &lt;- mgnify_get_analyses_metadata(mg, all_accessions)\n})\n\n\n\n\n\n\n\nClearing the Noise\n\n\n\nUsing capture.output to capture the noise being generated that would cause undesired ouputs in the quarto rendered notebook.\n\n\n\nKeeping just the first analysis accession to fetch the kegg orthologs count table from the MGnify API and transform from JSON to matrix.\n\n\naccession = head(all_accessions, 1)\nko_loc = paste0('analyses/',accession,'/kegg-orthologs')\n\n\nko_json = mgnify_retrieve_json(mg, path = ko_loc)\nko_data = as.data.frame(ko_json %&gt;% spread_all)[ , c(\"attributes.accession\", \"attributes.count\")]\nko_data = data.frame(ko_data, row.names=1)\ncolnames(ko_data)[1] = 'counts'\nko_matrix = data.matrix(ko_data)\nhead(ko_matrix, 3)\n\n\nA matrix: 3 × 1 of type dbl\n\n\n\ncounts\n\n\n\n\nK10822\n115\n\n\nK02030\n91\n\n\nK02004\n79\n\n\n\n\n\n\nFetch the modules completeness table and filter out completeness &lt; 100%.\n\n\ncomp_loc = paste0('analyses/',accession,'/kegg-modules')\nko_comp_json = mgnify_retrieve_json(mg, path = comp_loc)\nko_comp = as.data.frame(ko_comp_json %&gt;% spread_all)\nmodules = ko_comp[ko_comp$attributes.completeness == 100,][, c(\"attributes.accession\")]\nhead(modules)\n\n\n'M00001''M00002''M00003''M00004''M00005''M00006'\n\n\n\n\n\n1.2. Selecting the most complete pathways \n\n# Setting up function that collects KEGG pathways for a given list of IDs, excluding chemical structure & global maps\n\ncollect_pathways &lt;- function(ids_list) {\n    pathways = list()\n    for (id in ids_list) { \n        current_pathway = as.list(keggLink(\"pathway\", id))\n        for (index in grep(\"map\", current_pathway)) {        \n            clean_id = gsub(\"*path:\", \"\", current_pathway[index])\n            # Discarding chemical structure (map010XX), global (map011XX), and overview (map012XX) maps\n            prefix = substring(clean_id, 1, 6)\n            if(is.na(match(\"map010\", prefix)) & is.na(match(\"map011\", prefix)) & is.na(match(\"map012\", prefix)) ){\n                pathways = append(pathways, clean_id)\n            }\n        }\n    }\n    return(pathways)\n}\n\n\n\n\n\n\n\nCollecting pathways\n\n\n\n\nInput : List of Modules :: Output : List of Pathways\nkeggLink() is used to retrieve pathway info -&gt; “pathway”.\nUsing grep to get the pathway maps specifically.\n\n\n\n\nNow we need to collect the list of template pathways where these complete modules can be draw. This step takes less than 1 minute to run.\n\n\nmd_pathways = collect_pathways(modules)\nhead(md_pathways)\n\n\n    'map00010'\n    'map00010'\n    'map00010'\n    'map00020'\n    'map00030'\n    'map00030'\n\n\n\n\nIn order to draw the most complete pathways maps, we will use the list of templates we obtained in the previous step and select only pathways having all their constituent modules.\n\n\n# Counting the number of modules we have in each pathway\nour_pathways_counts = list()\nfor (path_element in md_pathways) {\n    if (path_element %in% names(our_pathways_counts)) {\n        new_value = our_pathways_counts[[path_element]] + 1\n        our_pathways_counts[path_element] = new_value       \n    } else {\n        our_pathways_counts[path_element] = 1 \n    }\n}\n\n# Counting the number of modules expected in each pathway\nu_pathways = unique(md_pathways)\nexp_pathways_counts = list()\nfor (path in u_pathways) {\n    mod_count = length(as.list(keggLink(\"module\", path)))\n    exp_pathways_counts[path] = mod_count \n}\n\n# Selecting the pathways having all their constituent modules. We remove the 'map' prefix as pathview doesn't like it\nto_draw = list()\nfor (pathway in names(our_pathways_counts)) {\n    our_value = our_pathways_counts[[pathway]]\n    exp_value = exp_pathways_counts[[pathway]]\n    ratio =  our_value / exp_value\n    if (ratio == 1) {\n        nude_id =  gsub(\"map\", \"\", pathway)\n        to_draw = append(to_draw, nude_id)   \n    }\n}\n\n\n# Adding the custom pathways to to_draw if not present already\nfor (pathway in CUSTOM_PATHWAY_IDS){\n    if (!(pathway %in% to_draw)) {\n    to_draw = append(to_draw, pathway)\n        }\n    }\n\n\n# printing name of the pathways to be drawn\nfor (pathway in to_draw){\n    display_markdown(paste(pathway, \"--&gt; \", get_pathway_info(pathway)[1],\" : \",get_pathway_info(pathway)[2], sep=\" \"))\n}\n\n00010 –&gt; Glycolysis / Gluconeogenesis : https://www.kegg.jp/pathway/map00010\n\n\n00480 –&gt; Glutathione metabolism : https://www.kegg.jp/pathway/map00480\n\n\n00430 –&gt; Taurine and hypotaurine metabolism : https://www.kegg.jp/pathway/map00430\n\n\n00521 –&gt; Streptomycin biosynthesis : https://www.kegg.jp/pathway/map00521\n\n\n00020 –&gt; Citrate cycle (TCA cycle) : https://www.kegg.jp/pathway/map00020\n\n\n00030 –&gt; Pentose phosphate pathway : https://www.kegg.jp/pathway/map00030\n\n\n00061 –&gt; Fatty acid biosynthesis : https://www.kegg.jp/pathway/map00061\n\n\n01232 –&gt; Nucleotide metabolism : https://www.kegg.jp/pathway/map01232\n\n\n00240 –&gt; Pyrimidine metabolism : https://www.kegg.jp/pathway/map00240\n\n\n00190 –&gt; Oxidative phosphorylation : https://www.kegg.jp/pathway/map00190\n\n\n\n\n\n1.3. Ready to draw! \n\nAs we are plotting absence/presence, we set the number of bins = 2, the scale in one direction, and use 1 as limit.\n\nTakes a couple of minutes depending on the number of pathways\n\nsuppressMessages({\nfor (p in to_draw) {\n    pathview(gene.data = ko_matrix, \n             species = \"ko\", \n             pathway.id = p, \n             bins=c(2, 2), \n             both.dirs = FALSE, \n             limit = c(1,1), \n             mid = c(\"#ffffff\" , \"#ffffff\"), \n             high = c(\"#02b3ad\" , \"#02b3ad\")\n    )\n}\n})\n\n\nClearing the current working directory and Displaying all the generated figures that are stored at the pathway_plots/ directory.\n\n\ngeneratePathwayPlots()\n\nGlycolysis / Gluconeogenesis\n\n\n\n\n\nCitrate cycle (TCA cycle)\n\n\n\n\n\nPentose phosphate pathway\n\n\n\n\n\nFatty acid biosynthesis\n\n\n\n\n\nOxidative phosphorylation\n\n\n\n\n\nPyrimidine metabolism\n\n\n\n\n\nTaurine and hypotaurine metabolism\n\n\n\n\n\nGlutathione metabolism\n\n\n\n\n\nStreptomycin biosynthesis\n\n\n\n\n\nNucleotide metabolism"
  },
  {
    "objectID": "src/notebooks/PathwaysExplorer.html#resources-and-documentation",
    "href": "src/notebooks/PathwaysExplorer.html#resources-and-documentation",
    "title": "Pathways Visualization",
    "section": "Resources and Documentation",
    "text": "Resources and Documentation\n\nMGnify\n\nhttps://docs.mgnify.org/src/docs/analysis.html#assembly-analysis-pipeline - Description of the latest MGnify analysis pipeline and the tools it uses.\nhttps://academic.oup.com/nar/article/48/D1/D570/5614179 - This paper highlights the platform’s functionalities for metagenomic data assembly and analysis. It also describes he implementation of KEGG modules in MGnify.\n\n\n\nPathview\n\nThe official documentation for Pathview, a tool for pathway-based data integration and visualization. It provides an overview of the tool and explains how to use it effectively.\nYou can find more information at https://pathview.uncc.edu/overview#kegg_view .\n\n\n\nKEGGREST\n\nKEGGREST is a Bioconductor package that provides programmatic access to the KEGG database.\nMore about KEGGREST at http://www.bioconductor.org/packages/release/bioc/vignettes/KEGGREST/inst/doc/KEGGREST-vignette.html ."
  }
]